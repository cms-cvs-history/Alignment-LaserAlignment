#
#  run on collection of ecal rechits to make a collection of AlCaReco rechits 
#  and store them in the output collection
#
#  Author: Jan Olzem
#  $Id: t0ProducerStandalone.cfg,v 1.2 2008/05/10 15:36:28 olzem Exp $
#  $Date: 2008/05/10 15:36:28 $

process laserAlignmentT0ProducerProcess = {

  # MessageLogger
  service = MessageLogger {
    untracked vstring destinations = {
      "cout", 
      "cerr"
    }
    // policies
    untracked PSet cout = { untracked string threshold = "INFO"  }
    untracked PSet cerr = { untracked string threshold = "ERROR" }
  }  


    # DB STUFF
#    es_source siStripFedCabling = PoolDBESSource {
#      VPSet toGet = { { string record = "SiStripFedCablingRcd" string tag = "insert_tag"} }
#      string connect = "frontier://cms_conditions_data/CMS_COND_STRIP"
#      string timetype = "runnumber"
#      untracked string BlobStreamerName="TBufferBlobStreamingService"
#      PSet DBParameters = {
#        untracked string authenticationPath=""
#        untracked int32 messageLevel = 0
#      }
#    }
#    replace siStripFedCabling.toGet = { { string record = "SiStripFedCablingRcd" string tag = "SiStripCabling_pass4_test_v1"} }
#    replace siStripFedCabling.connect = "frontier://FrontierDev/CMS_COND_STRIP"
#
#  # -- Acess offline DB via Frontier for cabling + pedestal/noise values
#  es_source = PoolDBESSource { 
#    VPSet toGet = { 
#      { string record = "SiStripPedestalsRcd" string tag = "SiStripPedNoise_TIF_v1_p" }, 
#      { string record = "SiStripNoisesRcd" string tag = "SiStripPedNoise_TIF_v1_n" },
#      { string record = "SiStripFedCablingRcd" string tag = "SiStripCabling_TIF_v1" }
#    }  
#
#    # WithFrontier untracked bool siteLocalConfig = true 
#    string connect = "oracle://orcon/CMS_COND_STRIP"
#    untracked string catalog = "relationalcatalog_oracle://orcon/CMS_COND_GENERAL" 
#    string timetype = "runnumber" 
#    PSet DBParameters = {
#      untracked string authenticationPath ="/afs/cern.ch/cms/DB/conddb"
#      untracked int32 messageLevel        = 0
#      untracked bool loadBlobStreamer = true
#    }
#  }   

  # input module
#  source = TBRUInputSource {
#    untracked vstring fileNames = {
#      "castor:/castor/cern.ch/cms/testbeam/TAC/TIF/run/RU0013724_000.root",
#      "castor:/castor/cern.ch/cms/testbeam/TAC/TIF/run/RU0013724_001.root",
#      "castor:/castor/cern.ch/cms/testbeam/TAC/TIF/run/RU0013724_002.root",
#      "castor:/castor/cern.ch/cms/testbeam/TAC/TIF/run/RU0013724_003.root",
#      "castor:/castor/cern.ch/cms/testbeam/TAC/TIF/run/RU0013724_004.root"
#    }
#  }

  source = PoolSource {
    untracked vstring fileNames = {
//      "castor:/castor/cern.ch/cms/store/TAC/TIF/edm_2007_07_15/EDM0013724_000.root"
	"file:/afs/cern.ch/user/o/olzem/scratch0/LaserEvents.SIM-DIGI.root"
    }
  }

  # -- Digitizer
  include "EventFilter/SiStripRawToDigi/data/SiStripDigis.cfi"


  include "Alignment/LaserAlignment/data/LaserAlignmentT0Producer.cfi"
  replace laserAlignmentT0Producer.DigiProducerList = {
	{ string DigiProducer = "simSiStripDigis"
	  string DigiLabel    = "VirginRaw" 
	  string DigiType     = "Raw" }
    }

  untracked PSet maxEvents = { untracked int32 input = -1 }


  module out = PoolOutputModule {
    untracked string fileName = "/afs/cern.ch/user/o/olzem/scratch0/LaserEvents.ALCARECO_210.root"
    untracked vstring outputCommands = {
      "drop *",
      "keep *_laserAlignmentT0Producer_*_*"
    }
  }


  module dump = EventContentAnalyzer {}

  sequence seqDigitization = { SiStripDigis }

  path pReconstruction = { 
#    seqDigitization,
    laserAlignmentT0Producer
  }

  endpath outputPath = {
#    dump,
    out
  }

}
