
process createScenario =  {

    # Empty event source
    source = EmptySource { }
    untracked PSet maxEvents = { untracked int32 input = 1 }

    # alignment output
    include "CondCore/DBCommon/data/CondDBCommon.cfi"
    replace CondDBCommon.connect = "sqlite_file:Alignments_S.db"
    
    # Database output service
    service = PoolDBOutputService {
	using CondDBCommon
	VPSet toPut = {
	    { string record = "TrackerAlignmentRcd"
		string tag = "Alignments" },
	    { string record = "TrackerAlignmentErrorRcd"
		string tag = "AlignmentErrors" }
	}
    } 

    # ideal geometry producer
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

    # tracker misalignment producer
    es_module misalignmentProducer = MisalignedTrackerESProducer {

	int32 seed = 3459873465

	string distribution = "fixed"
	untracked bool saveToDbase = true

	## T I B

	PSet TIB1 = { # TIB-
	    double phiXlocal = 0.000
	    double phiYlocal = 0.000 #0.002
	    double phiZlocal = 0.000
	    double dX        = 0.0
	    double dY        = 0.0
	}

	PSet TIB2 = { # TIB+
	    double phiXlocal = 0.000 #-0.002
	    double phiYlocal = 0.000
	    double phiZlocal = 0.000
	    double dX        = 0.0
	    double dY        = 0.0
	}


	## T O B  

	PSet TOB1 = { # TOB-
	    double phiXlocal = 0.000 #-0.002
	    double phiYlocal = 0.000
	    double phiZlocal = 0.000
	    double dX        = 0.0
	    double dY        = 0.0
	}

	PSet TOB2 = { # TOB+
	    double phiXlocal = 0.000
	    double phiYlocal = 0.000 #0.002
	    double phiZlocal = 0.000
	    double dX        = 0.0
	    double dY        = 0.0
	}



	## T E C +

	PSet TEC1 = {

	    double phiXlocal = 0.000
	    double phiYlocal = 0.000
	    double phiZlocal = 0.000
            double dX        = 0.0
            double dY        = 0.0

	    PSet TECDisk1 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk2 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk3 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk4 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk5 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk6 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk7 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk8 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk9 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	}
	
	
	## T E C -

	PSet TEC2 = {
	    
	    double phiXlocal = 0.000
	    double phiYlocal = 0.000
	    double phiZlocal = 0.000
            double dX        = 0.0
            double dY        = 0.0
	    
	    PSet TECDisk1 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk2 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk3 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk4 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk5 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk6 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk7 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk8 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }

	    PSet TECDisk9 = {
		double phiZlocal = 0.000
		double dX        = 0.0
		double dY        = 0.0
	    }
	}
	
    }

    module test =  TestAnalyzer { untracked string fileName = "misaligned.root" }
    path p1 = { test }
}
